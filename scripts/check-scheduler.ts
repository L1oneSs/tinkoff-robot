/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –æ—Ç—á–µ—Ç–æ–≤
 */

import { config } from 'dotenv';
import { TelegramNotifier } from '../src/notifications/telegram.js';
import { TradeTracker } from '../src/trade-tracker/index.js';
import { ReportGenerator } from '../src/reports/generator.js';
import { ReportScheduler } from '../src/scheduler/index.js';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
config();

async function checkSchedulerStatus() {
  console.log('‚è∞ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞...');
  
  const telegramNotifier = new TelegramNotifier();
  const tradeTracker = new TradeTracker();
  const reportGenerator = new ReportGenerator();
  const reportScheduler = new ReportScheduler(tradeTracker, reportGenerator, telegramNotifier);
  
  const status = reportScheduler.getStatus();
  console.log('\n' + status);
  
  if (telegramNotifier.isEnabled()) {
    console.log('\nüì§ –û—Ç–ø—Ä–∞–≤–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –≤ Telegram...');
    await telegramNotifier.sendMessage(status);
    console.log('‚úÖ –°—Ç–∞—Ç—É—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω');
  } else {
    console.log('\n‚ùå Telegram –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
  }
}

checkSchedulerStatus().catch(error => {
  console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  process.exit(1);
});
