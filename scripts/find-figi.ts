#!/usr/bin/env node
/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ FIGI –ø–æ —Ç–∏–∫–µ—Ä—É
 * 
 * –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
 * npx tsx scripts/find-figi.ts SBER
 * npx tsx scripts/find-figi.ts VTBR
 * npx tsx scripts/find-figi.ts GAZP
 */

import { config } from 'dotenv';
import { TinkoffInvestApi } from 'tinkoff-invest-api';
import { InstrumentStatus } from 'tinkoff-invest-api/dist/generated/instruments.js';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
config();

function printInstruments(instruments: any[]) {
  instruments.forEach((instrument, index) => {
    console.log(`üìä ${index + 1}. ${instrument.name}`);
    console.log(`   –¢–∏–∫–µ—Ä: ${instrument.ticker}`);
    console.log(`   FIGI: ${instrument.figi}`);
    console.log(`   –ö–ª–∞—Å—Å: ${instrument.instrumentType || '–ê–∫—Ü–∏—è'}`);
    console.log(`   –í–∞–ª—é—Ç–∞: ${instrument.currency}`);
    console.log(`   –ë–∏—Ä–∂–∞: ${instrument.exchange}`);
    console.log(`   –¢–æ—Ä–≥–æ–≤–ª—è –¥–æ—Å—Ç—É–ø–Ω–∞: ${instrument.tradingStatus === 'SECURITY_TRADING_STATUS_NORMAL_TRADING' ? '–î–∞' : '–ù–µ—Ç'}`);
    
    if (instrument.lot) {
      console.log(`   –†–∞–∑–º–µ—Ä –ª–æ—Ç–∞: ${instrument.lot}`);
    }
    
    if (instrument.minPriceIncrement) {
      const minPrice = Number(instrument.minPriceIncrement.units) + Number(instrument.minPriceIncrement.nano) / 1000000000;
      console.log(`   –ú–∏–Ω. —à–∞–≥ —Ü–µ–Ω—ã: ${minPrice}`);
    }
    
    console.log('');
  });

  // –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç, –≤—ã–≤–æ–¥–∏–º FIGI –æ—Ç–¥–µ–ª—å–Ω–æ –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
  if (instruments.length === 1) {
    console.log(`üéØ FIGI –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è: ${instruments[0].figi}`);
  }
}

async function findFigi(ticker: string) {
  if (!ticker) {
    console.log('‚ùå –£–∫–∞–∂–∏—Ç–µ —Ç–∏–∫–µ—Ä. –ü—Ä–∏–º–µ—Ä: npx tsx scripts/find-figi.ts SBER');
    process.exit(1);
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω
  const token = (process.env.TINKOFF_TOKEN || process.env.TINKOFF_API_TOKEN)?.trim();
  if (!token) {
    console.log('‚ùå –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è TINKOFF_TOKEN –∏–ª–∏ TINKOFF_API_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞');
    console.log('–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ–∞–π–ª .env —Å–æ–¥–µ—Ä–∂–∏—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω');
    process.exit(1);
  }

  try {
    console.log(`üîç –ü–æ–∏—Å–∫ FIGI –¥–ª—è —Ç–∏–∫–µ—Ä–∞: ${ticker.toUpperCase()}\n`);

    // –°–æ–∑–¥–∞–µ–º API
    const api = new TinkoffInvestApi({
      token: token,
      appName: 'tinkoff-robot-figi-finder'
    });

    // –ü–æ–∏—Å–∫ –∞–∫—Ü–∏–π –ø–æ —Ç–∏–∫–µ—Ä—É
    const sharesResponse = await api.instruments.shares({
      instrumentStatus: InstrumentStatus.INSTRUMENT_STATUS_BASE
    });
    
    // –§–∏–ª—å—Ç—Ä—É–µ–º –ø–æ —Ç–∏–∫–µ—Ä—É
    const matchingShares = sharesResponse.instruments.filter(instrument => 
      instrument.ticker.toUpperCase() === ticker.toUpperCase()
    );

    if (matchingShares.length > 0) {
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –∞–∫—Ü–∏–π: ${matchingShares.length}\n`);
      printInstruments(matchingShares);
      return;
    }
    
    // –ï—Å–ª–∏ –∞–∫—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –∏—â–µ–º –≤ –æ–±–ª–∏–≥–∞—Ü–∏—è—Ö
    const bondsResponse = await api.instruments.bonds({
      instrumentStatus: InstrumentStatus.INSTRUMENT_STATUS_BASE
    });
    
    const matchingBonds = bondsResponse.instruments.filter(instrument => 
      instrument.ticker.toUpperCase() === ticker.toUpperCase()
    );
    
    if (matchingBonds.length > 0) {
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –æ–±–ª–∏–≥–∞—Ü–∏–π: ${matchingBonds.length}\n`);
      printInstruments(matchingBonds);
      return;
    }

    // –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –∏—â–µ–º –≤ ETF
    const etfResponse = await api.instruments.etfs({
      instrumentStatus: InstrumentStatus.INSTRUMENT_STATUS_BASE
    });
    
    const matchingEtfs = etfResponse.instruments.filter(instrument => 
      instrument.ticker.toUpperCase() === ticker.toUpperCase()
    );
    
    if (matchingEtfs.length > 0) {
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ETF: ${matchingEtfs.length}\n`);
      printInstruments(matchingEtfs);
      return;
    }

    console.log(`‚ùå –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —Å —Ç–∏–∫–µ—Ä–æ–º "${ticker}" –Ω–µ –Ω–∞–π–¥–µ–Ω—ã`);

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ FIGI:', error);
  }
}

// –ü–æ–ª—É—á–∞–µ–º —Ç–∏–∫–µ—Ä –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
const ticker = process.argv[2];
findFigi(ticker).catch(console.error);
